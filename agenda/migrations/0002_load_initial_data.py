# Generated by Django

from django.db import migrations
from django.contrib.auth.models import User
from datetime import date, time, timedelta
from decimal import Decimal

def load_initial_data(apps, schema_editor):
    # Obtener los modelos
    Region = apps.get_model('agenda', 'Region')
    Servicio = apps.get_model('agenda', 'Servicio')
    Dentista = apps.get_model('agenda', 'Dentista')
    Paciente = apps.get_model('agenda', 'Paciente')
    SlotAgenda = apps.get_model('agenda', 'SlotAgenda')
    
    # Crear regiones
    regiones_data = [
        {'nombre': 'REGION DE ANTOFAGASTA', 'codigo': 'ANTF'},
        {'nombre': 'REGION DE COQUIMBO', 'codigo': 'CQMBO'},
        {'nombre': 'REGION METROPOLITANA', 'codigo': 'RM'},
    ]
    
    for region_data in regiones_data:
        Region.objects.get_or_create(**region_data)
    
    # Crear servicios
    servicios_data = [
        {'nombre': 'Consulta General', 'duracion_min': 30, 'precio': Decimal('25000')},
        {'nombre': 'Limpieza Dental Profesional', 'duracion_min': 45, 'precio': Decimal('35000')},
        {'nombre': 'Tratamiento de Caries', 'duracion_min': 60, 'precio': Decimal('45000')},
        {'nombre': 'Endodoncia', 'duracion_min': 90, 'precio': Decimal('120000')},
        {'nombre': 'Ortodoncia Control', 'duracion_min': 30, 'precio': Decimal('40000')},
        {'nombre': 'Implante Dental', 'duracion_min': 120, 'precio': Decimal('280000')},
        {'nombre': 'Extracción Simple', 'duracion_min': 30, 'precio': Decimal('30000')},
        {'nombre': 'Blanqueamiento Dental', 'duracion_min': 90, 'precio': Decimal('85000')},
    ]
    
    for servicio_data in servicios_data:
        Servicio.objects.get_or_create(
            nombre=servicio_data['nombre'],
            defaults=servicio_data
        )
    
    # Crear dentistas
    rm = Region.objects.get(codigo='RM')
    antf = Region.objects.get(codigo='ANTF')
    cqmbo = Region.objects.get(codigo='CQMBO')
    
    dentistas_data = [
        {
            'nombre': 'Dr. Juan Carlos',
            'apellido': 'Pérez González',
            'especialidad': 'Odontología General',
            'telefono': '+56912345678',
            'email': 'juan.perez@clinica.cl',
            'region': rm,
            'max_overbook_day': 2
        },
        {
            'nombre': 'Dra. María Elena',
            'apellido': 'Rodríguez Silva',
            'especialidad': 'Ortodoncia',
            'telefono': '+56987654321',
            'email': 'maria.rodriguez@clinica.cl',
            'region': rm,
            'max_overbook_day': 2
        },
        {
            'nombre': 'Dr. Carlos Alberto',
            'apellido': 'Moreno López',
            'especialidad': 'Endodoncia',
            'telefono': '+56911223344',
            'email': 'carlos.moreno@clinica.cl',
            'region': rm,
            'max_overbook_day': 2
        },
        {
            'nombre': 'Dra. Ana Patricia',
            'apellido': 'Vargas Muñoz',
            'especialidad': 'Implantología',
            'telefono': '+56922334455',
            'email': 'ana.vargas@clinica.cl',
            'region': antf,
            'max_overbook_day': 2
        },
        {
            'nombre': 'Dr. Roberto José',
            'apellido': 'Herrera Castro',
            'especialidad': 'Cirugía Oral',
            'telefono': '+56933445566',
            'email': 'roberto.herrera@clinica.cl',
            'region': antf,
            'max_overbook_day': 2
        },
        {
            'nombre': 'Dra. Carmen Luz',
            'apellido': 'Espinoza Torres',
            'especialidad': 'Periodoncia',
            'telefono': '+56944556677',
            'email': 'carmen.espinoza@clinica.cl',
            'region': cqmbo,
            'max_overbook_day': 2
        }
    ]
    
    for dentista_data in dentistas_data:
        Dentista.objects.get_or_create(
            email=dentista_data['email'],
            defaults=dentista_data
        )
    
    # Crear pacientes de ejemplo
    pacientes_data = [
        {
            'rut': '12345678-9',
            'nombre': 'Pedro',
            'apellido': 'González Martínez',
            'telefono': '+56912345678',
            'email': 'pedro.gonzalez@email.cl'
        },
        {
            'rut': '23456789-0',
            'nombre': 'María',
            'apellido': 'López Silva',
            'telefono': '+56987654321',
            'email': 'maria.lopez@email.cl'
        },
        {
            'rut': '34567890-1',
            'nombre': 'Carlos',
            'apellido': 'Martínez Rojas',
            'telefono': '+56911223344',
            'email': 'carlos.martinez@email.cl'
        }
    ]
    
    for paciente_data in pacientes_data:
        if not Paciente.objects.filter(rut=paciente_data['rut'], email=paciente_data['email']).exists():
            Paciente.objects.create(**paciente_data)

def reverse_load_initial_data(apps, schema_editor):
    # En caso de rollback, no hacer nada
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('agenda', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(load_initial_data, reverse_load_initial_data),
    ]